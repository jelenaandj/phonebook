{"version":3,"sources":["components/form.jsx","components/phone.jsx","components/phoneList.jsx","App.js","index.js"],"names":["Form","props","phoneL","useState","newName","setNewName","newPhone","setNewPhone","error","setError","clickHandler","phoneno","type","id","placeholder","onChange","e","target","value","onClick","match","tmp","console","log","filter","x","name","length","window","confirm","index","indexOf","splice","preventDefault","Phone","item","phone","PhoneList","list","filterName","setFilterName","includes","map","key","App","setPhoneL","push","ReactDOM","render","document","getElementById"],"mappings":"mPAyEeA,G,MAtEF,SAACC,GACV,IAAIC,EAASD,EAAMC,OADC,EAEUC,mBAAS,IAFnB,mBAEbC,EAFa,KAEJC,EAFI,OAGYF,mBAAS,IAHrB,mBAGbG,EAHa,KAGHC,EAHG,OAIMJ,mBAAS,IAJf,mBAIbK,EAJa,KAINC,EAJM,KAMhBC,EAAeT,EAAMS,aACrBC,EAAU,wBAoDd,OACI,8BACI,2BAAOC,KAAK,OAAOC,GAAG,OAAOC,YAAY,OAAOC,SAjBnC,SAACC,GAKlBX,EAAWW,EAAEC,OAAOC,UAahB,2BAAON,KAAK,OAAOC,GAAG,QAAQC,YAAY,6EAAiBC,SAV7C,SAACC,GACnBT,EAAYS,EAAEC,OAAOC,UAUjB,4BAAQN,KAAK,SAASO,QAtDV,SAACH,GAEjB,GADAP,EAAS,IACO,KAAZL,GAA+B,KAAbE,EAElB,GAAIA,EAASc,MAAMT,GAAU,CACzB,IAAIU,EAAG,YAAOnB,GAKd,GAJAoB,QAAQC,IAAIF,GACZA,EAAMA,EAAIG,QAAO,SAAAC,GAAC,OAAIrB,IAAYqB,EAAEC,QACpCJ,QAAQC,IAAIF,GAERA,EAAIM,OAAS,GAGb,IAAU,IADAC,OAAOC,QAAQ,2CACT,CACZ,IAAIC,EAAQ5B,EAAO6B,QAAQV,EAAI,IAC/BnB,EAAO8B,OAAOF,EAAO,GACrBpB,EAAaN,EAASE,SAG1BgB,QAAQC,IAAR,cAAmBnB,GAAnB,OAA6BE,IAC7BI,EAAaN,EAASE,QAI1BG,EAAS,2GAKbA,EAAS,UAGbO,EAAEiB,mBAsBE,UAEA,6BACA,+BAAQzB,MCtDL0B,EAbH,SAACjC,GAAQ,IAEZkC,EAAMlC,EAANkC,KAEL,OACI,6BACI,+BAASA,EAAKT,MACd,6BACA,+BAASS,EAAKC,OACd,+BC8BGC,EAtCG,SAACpC,GAAW,IAEpBC,EAAWD,EAAXC,OACFoC,EAAI,YAAOpC,GAHU,EAIWC,mBAAS,IAJpB,mBAIlBoC,EAJkB,KAINC,EAJM,KAqBzB,OACI,oCAAE,8BACE,yCACA,2BAAO5B,KAAK,OAAOC,GAAG,SAASE,SAjBlB,SAACC,GAGlBwB,EAAcxB,EAAEC,OAAOC,WAgBnB,6BAEQoB,EAAKd,QAAO,SAAAW,GACR,OAAOA,EAAKT,KAAKe,SAASF,MAC3BG,KAAI,SAAAP,GACH,OAAO,kBAAC,EAAD,CAAOA,KAAMA,EAAMQ,IAAKR,EAAKT,aCH7CkB,MAxBf,WAAgB,IAAD,EAEYzC,mBAAS,IAFrB,mBAEND,EAFM,KAEC2C,EAFD,KAeb,OACC,6BACE,kBAAC,EAAD,CAAMnC,aAdU,SAACgB,EAAKU,GACvB,IAAIf,EAAI,YAAInB,GACZmB,EAAIyB,KAAK,CAACpB,OAAKU,UACfS,EAAUxB,IAWyBnB,OAAQA,EAAQ2C,UAAWA,IAC7D,kBAAC,EAAD,CAAW3C,OAAQA,MCnBxB6C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bb8eb9b7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nconst Form = (props) => {\r\n    let phoneL = props.phoneL;\r\n    const [newName, setNewName] = useState('');\r\n    const [newPhone, setNewPhone] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    let clickHandler = props.clickHandler;\r\n    let phoneno = /^\\+[0-9]{3}\\s[0-9]{9}/;\r\n\r\n    const handleInput = (e) => {\r\n        setError(\"\");\r\n        if (newName !== '' && newPhone !== '') {\r\n\r\n            if (newPhone.match(phoneno)) {\r\n                let tmp = [...phoneL]\r\n                console.log(tmp)\r\n                tmp = tmp.filter(x => newName === x.name);\r\n                console.log(tmp)\r\n\r\n                if (tmp.length > 0) {\r\n                    // alert('Pitanje');\r\n                    const r = window.confirm('Do you want to change the phone number?');\r\n                    if (r === true) {\r\n                        let index = phoneL.indexOf(tmp[0]);\r\n                        phoneL.splice(index, 1);\r\n                        clickHandler(newName, newPhone);\r\n                    }\r\n                } else {\r\n                    console.log(`name${newName}${newPhone}`);\r\n                    clickHandler(newName, newPhone);\r\n                    // alert('Ne postoji, dodajemo');\r\n                }\r\n            } else {\r\n                setError('Number has to be +ххх ххххххххх format')\r\n                // clickHandler('Number has to be','+ххх ххххххххх format');\r\n\r\n            }\r\n        } else {\r\n            setError('Error!')\r\n            //clickHandler('Error!', 'Error!');\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const onNameChange = (e) => {\r\n        // let tmp=[...phoneL]\r\n        // tmp=tmp.filter(x=>(\r\n        //     x.e.target.value\r\n        // )).map(<Phone/>)\r\n        setNewName(e.target.value);\r\n    }\r\n\r\n    const onPhoneChange = (e) => {\r\n        setNewPhone(e.target.value);\r\n    }\r\n    ////\r\n\r\n\r\n    //////\r\n    return (\r\n        <form >\r\n            <input type='text' id='name' placeholder='name' onChange={onNameChange} />\r\n            <input type='text' id='phone' placeholder='+ххх ххххххххх' onChange={onPhoneChange} />\r\n            <button type='submit' onClick={handleInput} >SUBMIT</button>\r\n            {/* <button type='submit' onClick={() => clickHandler(ime, broj)} >SUBMIT</button> */}\r\n            <br/>\r\n            <label>{error}</label>\r\n        </form>\r\n    );\r\n}\r\nexport default Form","import React from 'react';\r\n\r\nconst Phone=(props)=>{\r\n    // let {phoneL}=props;\r\n    let {item}=props;\r\n\r\n    return(\r\n        <div>\r\n            <label >{item.name}</label>\r\n            <br/>\r\n            <label >{item.phone}</label>\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\nexport default Phone","import React, { useState } from 'react';\r\nimport Phone from './phone';\r\n\r\nconst PhoneList = (props) => {\r\n\r\n    let { phoneL } = props;\r\n    let list = [...phoneL];\r\n    const [filterName, setFilterName] = useState('');\r\n    //const [list2, setList] = useState(list3);\r\n\r\n    const handleSearch = (e) => {\r\n        // e.preventDefault();\r\n        //if (e.target.value !== \"\") {\r\n        setFilterName(e.target.value);\r\n        // list3 = list3.filter(item => {\r\n        //     // const lcase=item.toLowerCase();\r\n        //     // const filter=e.target.value.toLowerCase();\r\n        //     return item.name.includes(e.target.value);\r\n        // });\r\n        // console.log(list3);\r\n        //}\r\n        //setList(list3);\r\n    }\r\n\r\n    return (\r\n        <><form>\r\n            <label>Search</label>\r\n            <input type='text' id='search' onChange={handleSearch} />\r\n        </form>\r\n            <div>\r\n                {\r\n                    list.filter(item => {\r\n                        return item.name.includes(filterName);\r\n                    }).map(item => {\r\n                        return <Phone item={item} key={item.name}/>\r\n                    })\r\n                }\r\n            </div></>\r\n    );\r\n}\r\n\r\nexport default PhoneList","import React, { useState } from 'react';\nimport './App.css';\nimport Form from './components/form'\nimport PhoneList from './components/phoneList'\n\n\n\nfunction App() {\n\n  const [phoneL,setPhoneL]=useState([]);\n  const clickHandler=(name,phone)=>{\n    let tmp=[...phoneL];\n    tmp.push({name,phone})\n    setPhoneL(tmp);\n  }\n  // const clickDelete=(index,1)=>{\n  //   let tmp=[...phoneL];\n  //   tmp.splice({index,1});\n  //   setPhoneL(tmp);\n\n  // }\n\n  return (\n   <div>\n     <Form clickHandler={clickHandler} phoneL={phoneL} setPhoneL={setPhoneL}></Form>\n     <PhoneList phoneL={phoneL}></PhoneList>\n\n   </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}